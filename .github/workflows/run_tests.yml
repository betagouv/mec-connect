on:
  workflow_call:

defaults:
  run:
    shell: bash

env:
  SECRET_KEY: secret-key
  DEBUG: False
  DJANGO_SETTINGS_MODULE: mec_connect.settings.testing

jobs:
  test:
    name: Test

    strategy:
      matrix:
          python-version: ["3.12.2"]

    services:
      postgres:
        image: postgres
        ports:
          - 5433:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_NAME: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: 5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Check migrations
        run: |
          source .venv/bin/activate
          python manage.py makemigrations --check --dry-run

      - name: Run tests
        run: |
          source .venv/bin/activate
          python -m pytest
